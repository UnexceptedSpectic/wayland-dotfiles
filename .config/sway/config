# Read `man 5 sway` for a complete reference.

### Variables

    # Logo key. Use Mod1 for Alt.
    set $mod Mod4
    set $alt Mod1
    # Home row direction keys, like vim
    set $left j
    set $down k
    set $up l
    set $right semicolon
    # Your preferred terminal emulator
    set $term alacritty
    # Your preferred application launcher
    # Note: pass the final command to swaymsg so that the resulting window can be opened
    # on the original workspace that the command was run on.
    set $menu exec wofi -i --show drun

### Startup

    # Chatgpt web server
    exec_always --no-startup-id restart_chatgpt

    # Window focus indicator
    exec_always --no-startup-id pgrep -x flashfocus | xargs kill; flashfocus

    # Configure various settings based on what displays are connected 
    exec_always configure_based_on_connected_displays

    # Screen color temperature auto-adjustment
    #exec --no-startup-id gammastep
    # Enabled as user service. Stored in ~/.config/systemd/user/
    exec --no-startup-id "systemctl --user import-environment {,WAYLAND_}DISPLAY SWAYSOCK; systemctl --user start sway-session.target"

    # Status bar
    exec_always --no-startup-id pgrep -x waybar | xargs kill; waybar

    # Clipboard
    exec_always --no-startup-id wl-paste -t text --watch clipman store

### Output configuration

    # Cursor
    ## Managed by the script configure_based_on_connected_displays.
    seat * xcursor_theme phinger-cursors 18

    # Window settings
    default_border pixel 2
    default_floating_border pixel 2
    gaps inner 10

    # Desktop background
    ## Get 'wallpaper' variable from wal
    include "$HOME/.cache/wal/colors-sway"
    output * bg $wallpaper fill

    # Displays
    ## Managed by the script configure_based_on_connected_displays. 
    ## Don't edit below lines without considering how it would impact the script!
    output eDP-1 disable position 1921,0 mode 2496x1664@60Hz
    output DP-2 position 0,0 mode 1920x1080@60Hz scale 1.5

    ## You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration

    exec_always --no-startup-id pgrep -x swayidle | xargs -r kill ; \
	swayidle -w \
	timeout 120 'swaymsg "output * power off"' \
	resume 'swaymsg "output * power on"' \
	timeout 300 'swaymsg "output * power on" && lock' \
	before-sleep lock

# After 2 minutes of inactivity, displays turn off
# Given any activity, displays turn on again
# After 5 minutes of inactivity, screen locks
# Given a manual suspend command, screen locks first
#   Suspend works both when screen is locked or unlocked

### Input configuration
    
    input "9354:33639:Telink_Wireless_Receiver_Mouse" {
        accel_profile flat 
        pointer_accel -.25
    } 

    input "1118:2479:Microsoft_Surface_045E:09AF_Touchpad" {
	tap enabled
	dwt enabledPOINTER_BUTTON
	click_method clickfinger
	natural_scroll disabled
        scroll_factor 0.5
    }

    # Scroll on mouse middle button click and drag
    input "9354:33639:Telink_Wireless_Receiver_Mouse" {
	scroll_method on_button_down
	scroll_button 274
    }

    # https://github.com/freedesktop/xkeyboard-config/blob/master/symbols/ruPOINTER_BUTTON
    input * {
	xkb_layout us,ru
	xkb_model microsoftsurface
	xkb_variant ,winkeys
	xkb_options grp:alt_space_toggle
    }

# You can get the names of your inputs by running: swaymsg -t get_inputs

### Key bindings

# Ensure key bindings work regardless of keyboard layout
bindsym --to-code {

# Basics:
    
    # Lock screen
    #signal not sent to process
    #$mod+Escape exec sway_enter_idle

    # Start a terminal
    $mod+Return exec $term

    # Kill focused window
    $mod+Shift+q kill

    # Start your launcher
    $mod+d exec $menu

    # Run custom script
    $mod+o exec wofi_local_runner

    # Reload the configuration file
    $mod+Shift+c reload

    # Exit sway (logs you out of your Wayland session)
    $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'

    # Clipboard
    
    $mod+h exec clipman pick -t wofi

    # Waybar
    ## Hide/show
    $mod+$alt+b exec killall -SIGUSR1 waybar
    
    # Screenshot
    
      # Select region of screen and open in editor
      Print exec grim -g "$(slurp)" - | swappy -f -
    
    # Volume:
    
    XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ +5%
    XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@ -5%
    XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle
    XF86AudioMicMute exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle
    
    # Display brightness:
    
    XF86MonBrightnessDown exec --no-startup-id brightnessctl set 5%-
    XF86MonBrightnessUp exec --no-startup-id brightnessctl set 5%+
    
    # Playback:
    
    XF86AudioPlay exec --no-startup-id playerctl play-pause
    --locked XF86AudioPlay exec --no-startup-id playerctl play-pause
    XF86AudioNext exec --no-startup-id playerctl next
    XF86AudioPrev exec --no-startup-id playerctl previous
    XF86Search exec $menu

    # Moving around:

	# Move your focus around
	$mod+$left focus left
	$mod+$down focus down
	$mod+$up focus up
	$mod+$right focus right
	# Or use $mod+[up|down|left|right]
	$mod+Left focus left
	$mod+Down focus down
	$mod+Up focus up
	$mod+Right focus right

	# Move the focused window with the same, but add Shift
	$mod+Shift+$left move left
	$mod+Shift+$down move down
	$mod+Shift+$up move up
	$mod+Shift+$right move right
	# Ditto, with arrow keys
	$mod+Shift+Left move left
	$mod+Shift+Down move down
	$mod+Shift+Up move up
	$mod+Shift+Right move right

    # Workspaces:

	# Switch to workspace
	$mod+1 workspace number 1
	$mod+2 workspace number 2
	$mod+3 workspace number 3
	$mod+4 workspace number 4
	$mod+5 workspace number 5
	$mod+6 workspace number 6
	$mod+7 workspace number 7
	$mod+8 workspace number 8
	$mod+9 workspace number 9
	$mod+0 workspace number 10
	# Move focused container to workspace
	$mod+Shift+1 move container to workspace number 1
	$mod+Shift+2 move container to workspace number 2
	$mod+Shift+3 move container to workspace number 3
	$mod+Shift+4 move container to workspace number 4
	$mod+Shift+5 move container to workspace number 5
	$mod+Shift+6 move container to workspace number 6
	$mod+Shift+7 move container to workspace number 7
	$mod+Shift+8 move container to workspace number 8
	$mod+Shift+9 move container to workspace number 9
	$mod+Shift+0 move container to workspace number 10
	# Note: workspaces can have any name you want, not just numbers.
	# We just use 1-10 as the default.

    # Layout stuff:

	# You can "split" the current object of your focus with
	# $mod+b or $mod+v, for horizontal and vertical splits
	# respectively.
	$mod+b splith
	$mod+v splitv

	# Switch the current container between different layout styles
	$mod+s layout stacking
	$mod+w layout tabbed
	$mod+e layout toggle split

	# Make the current focus fullscreen
	$mod+f fullscreen

	# Toggle the current focus between tiling and floating mode
	$mod+Shift+space floating toggle

	# Swap focus between the tiling area and the floating area
	$mod+space focus mode_toggle

	# Move focus to the parent container
	$mod+a focus parent
    #
    # Scratchpad:
    #
	# Sway has a "scratchpad", which is a bag of holding for windows.
	# You can send windows there and get them back later.

	# Move the currently focused window to the scratchpad
	$mod+Shift+minus move scratchpad

	# Show the next scratchpad window or hide the focused scratchpad window.
	# If there are multiple scratchpad windows, this command cycles through them.
	$mod+minus scratchpad show
   

   
}

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

 #
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

include /etc/sway/config.d/*
